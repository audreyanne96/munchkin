# A2 - Game Theory
# Audrey Anne Arocha
# Python for Data Analysts: Methods & Tools

# The below code is divided into 5 main sections:
# Set-up (to import packages needed and set-up initial variables)
# Section 1 - Do you want to play?
# Section 2 - Introduction
# Section 3 - Game Proper
# Section 4 - Final Results

# SET-UP
# Importing the packages to be used throughout the code
import random
import time

# Declaring the variables for each player in the game and storyline.
# This is so the code for the game proper is streamlined and to easily change names as needed.
player1 = "" # user_player or default1_player
player2 = "" # python_player or default2_player
player3 = "" # third_player

# Declaring the variables for the names of each possible player in the storyline.
user_player = "" # Name of the user if they play
python_player = "Sandra" # Name of Python if the user plays
default1_player = "Michelle" # Name of Python player1 if the user does not play
default2_player = "Amber" # Name of Python player2 if the user does not play
third_player = "Devin" # Name of the player not allied with player1 or player2

# Declaring the variable for the game type
# Will be used in making conditionals easier in the code for the game proper
game_type = "" # To be set to the below depending on choices made
gametypeA = "A" # Game type if user chooses to play, and plays with Python
gametypeB = "B" # Game type if user does not choose to play and python plays against python

# SECTION 1 - DO YOU WANT TO PLAY?
play1 = input("Hi there! Do you want to play Survivor: Python Edition? (Y/N): ")
play1 = play1.casefold()

# The while loop asks the question again if the user responds with an answer not in the choices.
while play1 != "n" and play1 != "no" and play1 != "y" and play1 != "yes":
    play1 = input("I'm not sure I understand. Could you repeat that? Do you want to play? (Y/N) ")
    play1 = play1.casefold()
    if play1 == "n" or play1 == "no":
        break
    elif play1 == "y" or play1 == "yes":
        break

# Section 1A - User wants to play immediately.
if play1 == "y" or play1 == "yes":
    user_player = input("Amazing! Alright, before we start, how do you want to be called as in this game? ")
    user_player = user_player.casefold()
    # Sets up the gametype and players
    game_type = gametypeA
    player1 = user_player
    player2 = python_player
    player3 = third_player

# Section 1B - User does not want to play, python asks again
elif play1 == "n" or play1 == "no":
    play2 = input("""Are you sure? You could win a million dollars, you know. \nIt won’t be real, but you can brag about it, I guess. (Y/N) """)
    play2 = play2.casefold()
    
    # The while loop asks the question again if the user responds with an answer not in the choices.
    while play2 != "n" and play2 != "no" and play2 != "y" and play2 != "yes":
        play2 = input("I'm not sure I understand. Could you repeat that? Are you sure you don't want to play? (Y/N)")
        play2 = play2.casefold()
        if play2 == "n" or play2 == "no":
            break
        elif play2 == "y" or play2 == "yes":
            break
    
    # Section 1B-A - User is not sure, python asks again
    if play2 == "n" or play2 == "no":
        play3 = input("So you do want to play? (Y/N) ")
        play3 = play3.casefold()
        
        # The while loop asks the question again if the user responds with an answer not in the choices.
        while play3 != "n" and play3 != "no" and play3 != "y" and play3 != "yes":
            play3 = input("I'm not sure I understand. Could you repeat that? Do you want to play? (Y/N)")
            play3 = play3.casefold()
            if play3 == "n" or play3 == "no":
                break
            elif play3 == "y" or play3 == "yes":
                break
        
        # Section 1B-A-A - User wants to play
        if play3 == "y" or play3 == "yes":
            user_player = input("Amazing! Alright, before we start, how do you want to be called as in this game? ")
            user_player = user_player.casefold()
            # Sets up the gametype and players
            game_type = gametypeA
            player1 = user_player
            player2 = python_player
            player3 = third_player

        # Section 1B-A-B - User does not want to play
        elif play3 == "n" or play3 == "no":
            print("Alright then. Enjoy the show!")
            # Sets up the gametype and players
            game_type = gametypeB
            player1 = default1_player
            player2 = default2_player
            player3 = third_player
    
    # Section 1B-B - User is sure, does not want to play.
    elif play2 == "y" or play2 == "yes":
        print("Alright then. Enjoy the show!")
        # Sets up the gametype and players
        game_type = gametypeB
        player1 = default1_player
        player2 = default2_player
        player3 = third_player

    else:
        print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 1]")

# SECTION 2 - INTRODUCTION

# Section 2A - User plays against Python
# game_type = gametypeA = user_player vs python_player
# player1 = user_player, player2 = python_player, player3 = third_player
if game_type == gametypeA:
    player1 = player1.title()
    player2 = player2.title()
    player3 = player3.title()
    print(f"""
    {"-"*95}
    Alright then, {player1}. Welcome to Survivor: Python Edition! Lucky for you, you don’t have to go to a deserted island. You just have to make life-changing decisions to win one million dollars (or points). 
    
    You are now in the final 3 with {player2} and {player3} and have to vote each other out. By choosing who to eliminate, you also choose who to bring to the final two.
    
    You have been loyal to {player2} since the beginning. But the eliminated players are now in the jury! They get to decide who wins between the final two and you know with absolute certainty how they'll decide. And {player2} knows this too! 

    {player3} does not know this though and has made up his mind. He will just vote with whoever can bring him to the end. As such, the possibilities are:
    
    1 - If you and {player2} are in the final, the jury can't choose. There'll be a tie and you and {player2} get $500,000 each. 
    2 - However, the jury hates {player3}! So, if either you or {player2} eliminates the other and bring {player3} to the final, you are guaranteed to win the full $1M. Only one of you can do this, because {player3} will vote with whoever doesn't vote for him.
    3 - {player3} has the advantage to split his vote though. So if you and {player2} vote for each other, {player3} splits his vote and you and {player2} both get eliminated. {player3} then wins it all.
    {"-"*95}
    """)
    
    # Lets the user read through the instructions, delays the next part of the code.
    time.sleep(12)
    
    # User check-in
    understand = input("I know it's a lot. But, do you understand? (Y/N) ")
    understand = understand.casefold()
    
    # The while loop asks the question again if the user responds with an answer not in the choices.
    while understand != "n" and understand != "no" and understand != "y" and understand != "yes":
        understand = input("I'm not sure I understand. Could you repeat that? Do you want to play? (Y/N) ")
        understand = understand.casefold()
        if understand == "n" or understand == "no":
            break
        elif understand == "y" or understand == "yes":
            break
    
    # User check-in - User responds yes
    if understand == "y" or understand == "yes":
        print("Amazing! At least there's one of us who understands. You've probably had your coffee.")
    # User check-in - User responds no
    elif understand == "n" or understand == "no":
        print("That's a mood. I don't understand it either. But, I don't understand most things anyway.")

    # Lets the user read through the check-in, delays the next part of the code.
    time.sleep(2)
    
    # Shows the decision matrix
    print(f"""In any case, here's something the producers thought that could help you out:
    {"-"*95}
    {player1} || {player2}        \t| Eliminate {player1},                \t| Eliminate {player3},
                                | Bring {player3}                     \t| Bring {player1}
    {"-"*95}
    Eliminate {player2},          \t| {player3} splits his vote,          \t| {player3} votes with you.
    Bring {player3}               \t| You and {player2} are eliminated.   \t| {player2} is eliminated.
                                | {player3} wins the $1M.             \t| You win $1M.
    {"-"*95}
    Eliminate {player2},          \t| {player3} votes with {player2}      \t\t| {player3} is eliminated.
    Bring {player3}               \t| You are eliminated.                 \t| You and {player2} wins,
                                | {player2} wins the $1M.             \t| each getting $500T.
    {"-"*95}
    """)

# Section 2B - User chooses not to play, watches Python vs Python
# gametype = gametypeB = default1_player vs default2_player
# player1 = default1_player, player2 = default2_player, player3 = third_player
elif game_type == gametypeB:
    player1 = player1.title()
    player2 = player2.title()
    player3 = player3.title()
    print(f"""
    {"-"*95}
    Welcome to Survivor: Python Edition! We are now in the final 3 waiting for {player1}, {player2}, and {player3} to make life-changing decisions to win one million dollars (or points). 
    
    They now have to vote each other out. By choosing who to eliminate, they also choose who to bring to the final two.
    
    {player1} has been loyal to {player2} since the beginning. But the eliminated players are now in the jury! They get to decide who wins between the final two and both {player1} and {player2} know with absolute certainty how they'll decide.

    {player3} does not know this though and has made up his mind. He will just vote with whoever can bring him to the end. As such, the possibilities are:
    
    1 - If {player1} and {player2} are in the final, the jury can't choose. There'll be a tie and both will get $500,000 each. 
    2 - However, the jury hates {player3}! So, if either {player1} or {player2} eliminates the other and bring {player3} to the final, they are guaranteed to win the full $1M. Only one of them can do this, because {player3} will vote with whoever can bring him to the final.
    3 - {player3} has the advantage to split his vote though. So if {player1} and {player2} vote for each other, {player3} splits his vote and both get eliminated. {player3} then wins it all.
    {"-"*95}
    """)
    
    # Lets the user read through the instructions, delays the next part of the code.
    time.sleep(12)
    
    # User check-in
    understand = input("Pssst... hey... I know this is a lot. But, are you with me so far? (Y/N) ")
    understand = understand.casefold()
    
    # The while loop asks the question again if the user responds with an answer not in the choices.
    while understand != "n" and understand != "no" and understand != "y" and understand != "yes":
        understand = input("I'm not sure I understand. Could you repeat that? Do you understand (Y/N) ")
        understand = understand.casefold()
        if understand == "n" or understand == "no":
            break
        elif understand == "y" or understand == "yes":
            break
    
    # User check-in - User responds yes
    if understand == "y" or understand == "yes":
        print("Amazing! At least there's one of us who understands. You've probably had your coffee.")
    # User check-in - User responds no
    elif understand == "n" or understand == "no":
        print("That's a mood. I don't understand it either. But, I don't understand most things anyway.")

    # Lets the user read through the check-in, delays the next part of the code.
    time.sleep(2)
    
    # Shows the decision matrix
    print(f"""In any case, here's something the producers thought that could help you out:
    {"-"*95}
    {player1} || {player2}        \t| Eliminate {player1},                \t| Eliminate {player3},
                                | Bring {player3}                     \t| Bring {player1}
    {"-"*95}
    Eliminate {player2},          \t| {player3} splits his vote,          \t| {player3} votes with {player1}.
    Bring {player3}               \t| {player1} and {player2} are eliminated.   \t| {player2} is eliminated.
                                | {player3} wins the $1M.             \t| {player1} wins $1M.
    {"-"*95}
    Eliminate {player2},          \t| {player3} votes with {player2}      \t\t| {player3} is eliminated.
    Bring {player3}               \t| {player1} is eliminated.               | {player1} and {player2} wins,
                                | {player2} wins the $1M.             \t| each getting $500T.
    {"-"*95} 
    """)

# Section 2C - Catches if error. Advises to restart.
else:
    print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 2]")

# Section 2D - Transition to game proper, Are you ready.
# Lets the user read through the matrix, delays the next part of the code.
time.sleep(10)

# User check-in
ready = input("Now, are you ready? (Y/N) ")
ready = ready.casefold()
    
# The while loop asks the question again if the user responds with an answer not in the choices.
while ready != "n" and ready != "no" and ready != "y" and ready != "yes":
    ready = input("I'm not sure I understand. Could you repeat that? Are you ready? (Y/N) ")
    ready = ready.casefold()
    if ready == "n" or ready == "no":
        break
    elif ready == "y" or ready == "yes":
        break
    
# User check-in - User responds yes
if ready == "y" or ready == "yes":
    print("Amazing! Here we go...")
# User check-in - User responds no
elif ready == "n" or ready == "no":
    print("Oh... well... can't do anything about that really. It's time to begin!")

# Time delay after user check-in
time.sleep(2)
    
# SECTION 3 - GAME PROPER
# Points and result variables
# Setting up the million dollars aka points
points = [0,500000,1000000]
# Directory of possible results
results = {"A,A":(points[0],points[0]),
           "A,B":(points[2],points[0]),
           "B,A":(points[0],points[2]),
           "B,B":(points[1],points[1])}
# Declare variables to be used in game proper
result_p1 = 0
result_p2 = 0
result_p1_total = 0
result_p2_total = 0
round_count = 0

# Section 3A - Game proper for gametypeA = User vs Python
if game_type == gametypeA:
    
    # Loop will let the game run for 5 rounds max.
    while round_count < 5:
        
        # Player1 decision prompt
        decision_p1 = input(f"""
        {"-"*50}
        What would you like to do? (A or B) 
        A - Eliminate {player2}, and bring {player3}
        B - Bring {player2}, eliminate {player3}
        Decision: """)
        decision_p1 = decision_p1.casefold()
        
        # The while loop asks the question again if the user responds with an answer not in the choices.
        while decision_p1 != "a" and decision_p1 != "b":
            decision_p1 = input("Sorry, I don't understand. Please only choose either A or B. ")
            decision_p1 = decision_p1.casefold()
            if decision_p1 == "a":
                break
            elif decision_p2 == "b":
                break
        
        # Player2 decision randomization
        decision_p2 = random.randint(0,1) #0 = a = eliminate p1, bring p3 #1 = b = bring p1, eliminate p3
        if decision_p2 == 0:
            decision_p2 = "a"
        elif decision_p2 == 1:
            decision_p2 = "b"
        else:
            print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 3A]")
            
        # Conditional statements to identify the points based on both players' decision
        if decision_p1 == "a" and decision_p2 == "a":
            result_p1 = results["A,A"][0]
            result_p2 = results["A,A"][1]
        elif decision_p1 == "a" and decision_p2 == "b":
            result_p1 = results["A,B"][0]
            result_p2 = results["A,B"][1]
        elif decision_p1 == "b" and decision_p2 == "a":
            result_p1 = results["B,A"][0]
            result_p2 = results["B,A"][1]
        elif decision_p1 == "b" and decision_p2 == "b":
            result_p1 = results["B,B"][0]
            result_p2 = results["B,B"][1]
        else:
            print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 3A]")
        
        # Overwrites the round count and total current result
        round_count += 1
        result_p1_total += result_p1
        result_p2_total += result_p2
        
        # Time delay
        time.sleep(3)
            
        # Prints decisions of Players
        print(f"""
        {"-"*50}
        ROUND {round_count}:
        {player1} chose {decision_p1.upper()}.
        {player2} chose {decision_p2.upper()}.
        """)
        
        # Time delay
        time.sleep(1)
        
        # Announcing the result per round:
        if round_count == 1:
            print(f"""
            This means {player1} has won {result_p1} this round, and {player2} has won {result_p2}.
            You must be thinking: "Wait... "this round"? You mean Survivor is giving more than $1M?"
            That's right! They have more money to give away because of lower production costs.
            Like, seriously, I'm the only one here.
            Anyway, let's go to round 2!
            """)
            time.sleep(3)
        elif round_count == 2:
            print(f"""
            Round 2 gives {player1} {result_p1} dollars and {player2} {result_p2}.
            That means {player1} now has {result_p1_total}, while {player2} has {result_p2_total}.
            Round 3, here we go!
            """)
            time.sleep(3)
        elif round_count == 3:
            print(f"""
            And for round 3 we have {player1} winning {result_p1} and {player2} winning {result_p2}.
            We now have {player1} with {result_p1_total}, and {player2} with {result_p2_total}.
            Woah. That's a lot of money. Or not. Depending on how you see it. I guess.
            Moving on?
            """)
            time.sleep(3)
        elif round_count == 4:
            print(f"""
            Round 4 done and has {player1} getting {result_p1} more and {player2} {result_p2} more.
            Amazing! I think...
            Anyway, that puts us at {player1} with {result_p1_total}, and {player2} with {result_p2_total}.
            Last chance now. Round 5 here we go!
            """)
            time.sleep(3)
        elif round_count == 5:
            print(f"""
            And that is it! For this last round {player1} got {result_p1} and {player2} got {result_p2}.
            Let me just go do my thing, review the calculations, and hold you in fake anticipation...
            {"-"*50}
            """)
            time.sleep(5)
        else:
            print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 3A]")

# Section 3B - Game proper for gametypeB = Python vs Python
elif game_type == gametypeB:    

    # Loop will let the game run for 5 round max
    while round_count < 5:
    
        # Decision prompt for both players
        print(f"""
        {"-"*50}
        So {player1} and {player2}, what would you like to do? (A or B)
        A - Eliminate each other, and bring {player3} to the final
        B - Bring each other to the final, and eliminate {player3}
        """)
        
        # Player1 decision randomization
        decision_p1 = random.randint(0,1) #0 = a = eliminate p1, bring p3 #1 = b = bring p1, eliminate p3
        if decision_p1 == 0:
            decision_p1 = "a"
        elif decision_p1 == 1:
            decision_p1 = "b"
        else:
            print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 3B]")
        
        # Player2 decision randomization
        decision_p2 = random.randint(0,1) #0 = a = eliminate p1, bring p3 #1 = b = bring p1, eliminate p3
        if decision_p2 == 0:
            decision_p2 = "a"
        elif decision_p2 == 1:
            decision_p2 = "b"
        else:
            print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 3B]")

        # Conditional statements to identify the points based on both players' decision
        if decision_p1 == "a" and decision_p2 == "a":
            result_p1 = results["A,A"][0]
            result_p2 = results["A,A"][1]
        elif decision_p1 == "a" and decision_p2 == "b":
            result_p1 = results["A,B"][0]
            result_p2 = results["A,B"][1]
        elif decision_p1 == "b" and decision_p2 == "a":
            result_p1 = results["B,A"][0]
            result_p2 = results["B,A"][1]
        elif decision_p1 == "b" and decision_p2 == "b":
            result_p1 = results["B,B"][0]
            result_p2 = results["B,B"][1]
        else:
            print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 3B]")

        # Overwrites the round count and total current result
        round_count += 1
        result_p1_total += result_p1
        result_p2_total += result_p2
        
        # Time delay
        time.sleep(3)
            
        # Prints decisions of Players
        print(f"""
        {"-"*50}
        ROUND {round_count}:
        {player1} chose {decision_p1.upper()}.
        {player2} chose {decision_p2.upper()}.
        """)
        
        # Time delay
        time.sleep(1)
        
        # Announcing the result per round
        if round_count == 1:
            print(f"""
            This means {player1} has won {result_p1} this round, and {player2} has won {result_p2}.
            You must be thinking: "Wait... "this round?" You mean Survivor is giving more than $1M?""
            That's right! They have a lot more money to give away because of lower production costs.
            Like, seriously, I'm the only person here.
            Anyway, let's go to round 2!
            """)
            time.sleep(3)
        elif round_count == 2:
            print(f"""
            Round 2 gives {player1} {result_p1} dollars and {player2} {result_p2}.
            That means {player1} now has {result_p1_total}, while {player2} has {result_p2_total}
            """)
            time.sleep(3)
        elif round_count == 3:
            print(f"""
            And for round 3 we have {player1} winning {result_p1} and {player2} winning {result_p2}.
            We now have {player1} with {result_p1_total}, and {player2} with {result_p2_total}.
            Woah. That's a lot of money. Or not. Depending on how you see it. I guess.
            Moving on?
            """)
            time.sleep(3)
        elif round_count == 4:
            print(f"""
            Round 4 done and has {player1} getting {result_p1} more and {player2} {result_p2} more.
            Amazing! I think...
            Anyway, that puts us at {player1} with {result_p1_total}, and {player2} with {result_p2_total}.
            Last chance now. Round 5 here we go!
            """)
            time.sleep(3)
        elif round_count == 5:
            print(f"""
            And that is it! For this last round {player1} got {result_p1} and {player2} got {result_p2}.
            Let me just go do my thing and take a moment and review the calculations and hold you in fake anticipation...
            {"-"*50}
            """)
            time.sleep(5)
        else:
            print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 3B]")

# Section 3C - Catches if error. Advises to restart.
else:
    print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 3]")
    

# SECTION 4 - FINAL RESULTS

# Section 4A - Final results for gametypeA = User vs Python
if game_type == gametypeA:
    
    # Result: User > Python = USER WINS
    if result_p1_total > result_p2_total:
        print(f"""
        There you have it! 
        We have {player2} with {result_p2_total}. But, {player1} rallied and won {result_p1_total}!
        Congratulations, {player1}! Amazing decision-making. Totally not based on luck at all!
        Thank you for participating, {player1}. Hope you had a fun time!
        """)
    
    # Result: User < Python = PYTHON WINS
    elif result_p1_total < result_p2_total:
        print(f"""
        Don't be sad {player1}. I'm sure you'll be okay with your {result_p1_total} fake dollars.
        Congratulations to {player2} though! Wow! {result_p2_total} fake dollars!
        Thank you for playing, {player1}. Hope you had fun at least!
        """)
    
    # Result: User == Python = BOTH WIN
    elif result_p1_total == result_p2_total:
        print(f"""
        Hold on folks! Is what I am seeing right? It is!
        Congratulations to both {player1} and {player2}. Somehow it's a tie even after 5 rounds!
        Enjoy your virtual {result_p1_total} dollars.
        Thank you for playing, {player1}! Hope that was fun!
        """)
    else:
        print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 4A]")

# Section 4B - Final results for gametypeB = Python vs Python        
elif game_type == gametypeB:
    
    # Result: Python1 > Python2 = PYTHON1 WINS
    if result_p1_total > result_p2_total:
        print(f"""
        There you have it! 
        We have {player2} with {result_p2_total}. But, {player1} has rallied and won {result_p1_total}!
        Congratulations {player1}! Amazing decision-making. Totally not based on luck and randomization at all!
        
        Thank you to our sole viewer too! Yeah, I meant you! Hope you had fun!
        """)
    
    # Result: Python1 < Python2 = PYTHON2 WINS    
    elif result_p1_total < result_p2_total:
        print(f"""
        No need to be devastated {player1}. I'm sure you'll be okay with your {result_p1_total}.
        Congratulations to {player2}! Enjoy the virtual {result_p2_total}.
        
        Thank you to our sole viewer too! Yeah, I meant you! Hope you had fun!
        """)
    
    # Result: Python1 == Python2 = BOTH WIN
    elif result_p1_total == result_p2_total:
        print(f"""
        Hold on folks! Is what I am seeing right? It is!
        Congratulations to both {player1} and {player2}. Somehow you have tied it up even after 5 rounds!
        
        Thank you to our sole viewer too! Yeah, I meant you! Hope you had fun!
        """)
    else:
        print("Oh no... something seems to be going wrong. Kindly restart and try again. \n[Error in Section 4B]")

print("-"*40,"THE END","-"*40)
